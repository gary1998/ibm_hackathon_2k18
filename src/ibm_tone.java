
import com.ibm.watson.developer_cloud.tone_analyzer.v3.ToneAnalyzer;
import com.ibm.watson.developer_cloud.tone_analyzer.v3.model.ToneAnalysis;
import com.ibm.watson.developer_cloud.tone_analyzer.v3.model.ToneOptions;
import java.awt.Color;
import java.io.IOException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;




/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author lenovo
 */
public class ibm_tone extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form ibm_tone
     */
    Thread t = new Thread(this);
    static String name = "";
    public ibm_tone(String str, String nm) 
    {
        initComponents();
        name = nm;
        this.setResizable(false);
        this.setSize(756, 388);
        
        
        jTextArea1.setText(str);
        jTextArea1.setEditable(false);
        
    }
    public void run()
    {
        while(true)
        {
            try {
                Process prc = java.lang.Runtime.getRuntime().exec("ping www.twitter.com");
                int x = prc.waitFor();
                if(x==0)
                {
                    if(!jLabel6.getText().equals("Connected to internet!"))
                    {
                        jLabel6.setForeground(Color.blue);
                        jLabel6.setText("Connected to internet!");
                    }
                }
                else
                {
                    jLabel6.setForeground(Color.red);
                    jLabel6.setText("Internet access not available!");
                }
            } catch (InterruptedException | IOException ex) {
                Logger.getLogger(status_fetch.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SENTIMENTAL ANALYSIS");
        setLocationByPlatform(true);
        setPreferredSize(new java.awt.Dimension(700, 360));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jButton1.setBackground(new java.awt.Color(0, 204, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("ANALYZE");
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(10, 310, 110, 40);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("SENTIMENTAL ANALYSIS");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(10, 11, 725, 22);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Analyze the twitter-fetched updates using IBM Watson Tone Analyzer tool over IBM Cloud Service");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(10, 51, 725, 17);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 86, 725, 210);

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setToolTipText("Online / Offline");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(490, 330, 248, 20);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ana_bg.jpg"))); // NOI18N
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 750, 360);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        t.start();
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jButton1.setEnabled(false);
        ToneAnalyzer service = new ToneAnalyzer("2017-09-21");
        service.setUsernameAndPassword("16900b5a-1166-4c95-88e6-0f4e18d5ab30", "z1ighnIFk8xk");
        String str = jTextArea1.getText();
        ToneOptions toneOptions = new ToneOptions.Builder()
        .html(str)
        .build();
        HashMap <String,Double> j=new HashMap();
        ToneAnalysis tone = service.tone(toneOptions).execute();

    for(int i=0;i<tone.getDocumentTone().getTones().size();i++)
        j.put(tone.getDocumentTone().getTones().get(i).getToneName(),tone.getDocumentTone().getTones().get(i).getScore());
  
    double scoreSad = 0;
    double scoreFear = 0;
    double scoreAnger = 0;
    double scoreAnalytical = 0;
    double scoreTentative = 0;
    double scoreJoy = 0;
    double scoreConfident = 0;
    String mood = "";
    for(int i=0;i<j.size();i++)
    {
        if(j.containsKey("Joy"))
        {
            scoreJoy = j.get("Joy");
        }
        if(j.containsKey("Analytical"))
        {
           scoreAnalytical = j.get("Analytical");
        }
        if(j.containsKey("Tentative"))
        {
            scoreTentative = j.get("Tentative");
        }
        if(j.containsKey("Confident"))
        {
            scoreConfident = j.get("Confident");
        }
        if(j.containsKey("Sadness"))
        {
            scoreSad = j.get("Sadness");
        }
        if(j.containsKey("Fear"))
        {
            scoreFear = j.get("Fear");
        }
        if(j.containsKey("Anger"))
        {
            scoreAnger = j.get("Anger");
        }
}
    double negativeScore = 0;
    negativeScore=(Math.max(Math.max(scoreSad, scoreAnger),scoreFear));
    double positiveScore = 0;
    positiveScore = Math.max(Math.max(Math.max(scoreConfident,scoreTentative),scoreJoy),scoreAnalytical);
    if(negativeScore != 0)
    {
        if(negativeScore == scoreFear)
        {
            mood = "Fear";
        }
        if(negativeScore == scoreSad)
        {
            mood = "Sad";
        }
        if(negativeScore == scoreAnger)
        {
            mood = "Anger";
        }
    }
    if(negativeScore == 0)
    {
        if(positiveScore == scoreAnalytical)
        {
            mood = "Analytical";
        }
        if(positiveScore == scoreTentative)
        {
            mood = "Tentative";
        }
        if(positiveScore == scoreConfident)
        {
            mood = "Confident";
        }
        if(positiveScore == scoreJoy)
        {
            mood = "Joy";
        }
        new gif_disp(name,mood).setVisible(true);
        this.setVisible(false);
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ibm_tone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ibm_tone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ibm_tone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ibm_tone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ibm_tone(null,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
