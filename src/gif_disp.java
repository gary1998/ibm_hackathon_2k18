
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author lenovo
 */
public class gif_disp extends javax.swing.JFrame {

    /**
     * Creates new form gif_disp
     */
    static String mood = "";
    public gif_disp(String name,String md) {
        initComponents();
        mood = md;
        jTextArea1.append("Name: "+name);
        jTextArea1.append("\nMood: "+mood);
        this.setResizable(false);
        this.setSize(706, 388);
        jTextArea1.setToolTipText("Press anywhere to continue");
        jLabel3.setToolTipText("Press anywhere to continue");
        jLabel4.setToolTipText("Press anywhere to continue");
        if(mood.equals("Joy"))
        {
            jLabel3.setIcon(new ImageIcon(getClass().getResource("images\\joy.gif")));
        }
        if(mood.equals("Analytical"))
        {
            jLabel3.setIcon(new ImageIcon(getClass().getResource("images\\analytical.gif")));
        }
        if(mood.equals("Tentative"))
        {
            jLabel3.setIcon(new ImageIcon(getClass().getResource("images\\tentative.gif")));
        }
        if(mood.equals("Confident"))
        {
            jLabel3.setIcon(new ImageIcon(getClass().getResource("images\\confident.gif")));
        }
        if(mood.equals("Sad"))
        {
            jLabel3.setIcon(new ImageIcon(getClass().getResource("images\\sad.gif")));
        }
        if(mood.equals("Fear"))
        {
            jLabel3.setIcon(new ImageIcon(getClass().getResource("images\\fear.gif")));
        }
        if(mood.equals("Anger"))
        {
            jLabel3.setIcon(new ImageIcon(getClass().getResource("images\\anger.gif")));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SENTIMENTAL ANALYSIS");
        setBackground(new java.awt.Color(0, 0, 0));
        setLocationByPlatform(true);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3);
        jLabel3.setBounds(340, 121, 350, 228);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("FINAL MOOD ANALYSIS");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 10, 680, 40);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jTextArea1.setOpaque(false);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 120, 300, 230);

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/final_bg.png"))); // NOI18N
        jLabel4.setOpaque(true);
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 700, 360);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        String link = "";
        if(mood.equals("Joy")||mood.equals("Tentative")||mood.equals("Analytical")||mood.equals("Sad"))
        {
            link = "https://www.youtube.com/watch?v=FaJqCFwZNX4";
        }
        else
        {
            if(mood.equals("Confident"))
                    link="https://www.youtube.com/watch?v=cwLRQn61oUY";
            else
            if(mood.equals("Anger"))
                    link="https://www.youtube.com/watch?v=ekYwfFX6_Vs";
            else
                    link="https://www.youtube.com/watch?v=QrhXln-zHso";
        }

        try 
        {
            // TODO add your handling code here:
            Desktop desktop = Desktop.getDesktop();
            URI link1 = new URI(link);
            desktop.browse(link1);
            this.setVisible(false);
        } 
        catch (IOException e) 
        {
            JOptionPane.showMessageDialog(this, "Exception: "+e.getMessage());
        } catch (URISyntaxException ex) {
            Logger.getLogger(gif_disp.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_formMouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        
        String link = "";
        if(mood.equals("Joy")||mood.equals("Tentative")||mood.equals("Analytical")||mood.equals("Sad"))
        {
            link = "https://www.youtube.com/watch?v=FaJqCFwZNX4";
        }
        else
        {
            if(mood.equals("Confident"))
                    link="https://www.youtube.com/watch?v=cwLRQn61oUY";
            else
            if(mood.equals("Anger"))
                    link="https://www.youtube.com/watch?v=ekYwfFX6_Vs";
            else
                    link="https://www.youtube.com/watch?v=QrhXln-zHso";
        }

        try 
        {
            // TODO add your handling code here:
            Desktop desktop = Desktop.getDesktop();
            URI link1 = new URI(link);
            desktop.browse(link1);
            this.setVisible(false);
        } 
        catch (IOException e) 
        {
            JOptionPane.showMessageDialog(this, "Exception: "+e.getMessage());
        } catch (URISyntaxException ex) {
            Logger.getLogger(gif_disp.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        String link = "";
        if(mood.equals("Joy")||mood.equals("Tentative")||mood.equals("Analytical")||mood.equals("Sad"))
        {
            link = "https://www.youtube.com/watch?v=FaJqCFwZNX4";
        }
        else
        {
            if(mood.equals("Confident"))
                    link="https://www.youtube.com/watch?v=cwLRQn61oUY";
            else
            if(mood.equals("Anger"))
                    link="https://www.youtube.com/watch?v=ekYwfFX6_Vs";
            else
                    link="https://www.youtube.com/watch?v=QrhXln-zHso";
        }

        try 
        {
            // TODO add your handling code here:
            Desktop desktop = Desktop.getDesktop();
            URI link1 = new URI(link);
            desktop.browse(link1);
            this.setVisible(false);
        } 
        catch (IOException e) 
        {
            JOptionPane.showMessageDialog(this, "Exception: "+e.getMessage());
        } catch (URISyntaxException ex) {
            Logger.getLogger(gif_disp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gif_disp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gif_disp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gif_disp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gif_disp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gif_disp(null,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
